To make a simple feed-foward NN that gets better at playing Tetris.

In cahoots with David Vu, Karla Osornio, Alex Flores Escarcega .

Subtasks:
1) Understand the open-sourced tetris game code that the game designer had written.
    a) Understand the variables, the methods, and flow of execution
    b) Remove or alter obvious inefficiencies that would slow down training
        - ex) music loading and playing
        - ex) font loading and displaying
        - ex) reduce number of read and writes to files such as configs (save configs in code instead)
2) Implement a way of grabbing the score, current falling tetris piece, the next falling tetrix piece, and the number of visible vacancies viewed from above.
    a) The number of visible vacancies can be represented as a fixed-length array of integergers where the integer represents the number of vacant blocks, starting at the highest row working downwards.
3) Implement a fitness function that simply maximizes score under a time limit
4) Slightly alter the weights in the simple feed-forward NN.
    a) Alter the weights by applying small tweaks and hope that something useful comes from it
5) Save the moves in a file, at the end of the game, that the model performed for running later in the game 
    a) Store the arrow key presses in a basic text file
    b) With saved random number generator seed, play game with graphics enabled
6) Display the score over generation
    a) in a graph.
